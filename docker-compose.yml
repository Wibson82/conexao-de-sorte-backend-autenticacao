# ============================================================================
# DOCKER COMPOSE - PRODU√á√ÉO - MICROSERVI√áO AUTENTICA√á√ÉO
# ============================================================================
# Configura√ß√£o simplificada para produ√ß√£o sem MySQL pr√≥prio
# Conecta ao MySQL existente no servidor
# ============================================================================

services:
  autenticacao:
    image: ghcr.io/wibson82/conexao-de-sorte-backend-autenticacao:${IMAGE_TAG:-latest}
    environment:
      - SPRING_PROFILES_ACTIVE=${ENVIRONMENT:-prod,azure}
      - TZ=America/Sao_Paulo

      # Feature Flags
      - FEATURE_AUTH_MICROSERVICE=${FEATURE_AUTH_MICROSERVICE:-true}
      - FEATURE_JWKS_ROTATION=${FEATURE_JWKS_ROTATION:-true}
      - FEATURE_AUDIT_LOGGING=${FEATURE_AUDIT_LOGGING:-true}
      - FEATURE_METRICS_COLLECTION=${FEATURE_METRICS_COLLECTION:-true}

      # Rate Limiting
      - RATE_LIMIT_LOGIN=${RATE_LIMIT_LOGIN:-10}
      - RATE_LIMIT_LOGIN_BURST=${RATE_LIMIT_LOGIN_BURST:-20}
      - RATE_LIMIT_VALIDATION=${RATE_LIMIT_VALIDATION:-100}
      - RATE_LIMIT_VALIDATION_BURST=${RATE_LIMIT_VALIDATION_BURST:-200}

      # Logging
      - LOG_LEVEL_ROOT=${LOG_LEVEL_ROOT:-INFO}
      - LOG_LEVEL_AUTENTICACAO=${LOG_LEVEL_AUTENTICACAO:-INFO}
      - LOG_LEVEL_SECURITY=${LOG_LEVEL_SECURITY:-WARN}

      # Tracing
      - TRACING_PROBABILITY=${TRACING_PROBABILITY:-0.1}
    secrets:
      - conexao-de-sorte-database-r2dbc-url
      - conexao-de-sorte-database-username
      - conexao-de-sorte-database-password
      - conexao-de-sorte-redis-host
      - conexao-de-sorte-redis-port
      - conexao-de-sorte-redis-password
      - conexao-de-sorte-redis-database
      - conexao-de-sorte-jwt-secret
      - conexao-de-sorte-jwt-issuer
      - conexao-de-sorte-server-port

    networks:
      - conexao-network-swarm

    restart: unless-stopped

    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

    # ==========================================================================
    # üè∑Ô∏è TRAEFIK LABELS - AUTENTICACAO SERVICE
    # ==========================================================================
    labels:
      # Habilitar Traefik para este servi√ßo
      - "traefik.enable=true"
      - "traefik.docker.network=conexao-network-swarm"

      # Configura√ß√£o do servi√ßo Autenticacao
      - "traefik.http.services.autenticacao-service.loadbalancer.server.port=8081"
      - "traefik.http.services.autenticacao-service.loadbalancer.healthcheck.path=/actuator/health"
      - "traefik.http.services.autenticacao-service.loadbalancer.healthcheck.interval=30s"

      # Health check individual do Autenticacao
      - "traefik.http.routers.autenticacao-health.rule=Host(`traefik.conexaodesorte.com.br`) && PathPrefix(`/health/service/autenticacao`)"
      - "traefik.http.routers.autenticacao-health.entrypoints=websecure"
      - "traefik.http.routers.autenticacao-health.tls.certresolver=letsencrypt"
      - "traefik.http.routers.autenticacao-health.service=autenticacao-service"
      - "traefik.http.routers.autenticacao-health.middlewares=autenticacao-health-rewrite"

      # Middleware para reescrever path do health check
      - "traefik.http.middlewares.autenticacao-health-rewrite.replacepath.path=/actuator/health"

      # Metadata do servi√ßo
      - "org.opencontainers.image.title=Conex√£o de Sorte - Autentica√ß√£o"
      - "org.opencontainers.image.description=Microservi√ßo de autentica√ß√£o e autoriza√ß√£o"
      - "org.opencontainers.image.version=1.0.0"
      - "microservice.type=authentication"
      - "microservice.category=security"

networks:
  conexao-network-swarm:
    external: true

secrets:
  conexao-de-sorte-database-r2dbc-url:
    external: true
  conexao-de-sorte-database-username:
    external: true
  conexao-de-sorte-database-password:
    external: true
  conexao-de-sorte-redis-host:
    external: true
  conexao-de-sorte-redis-port:
    external: true
  conexao-de-sorte-redis-password:
    external: true
  conexao-de-sorte-redis-database:
    external: true
  conexao-de-sorte-jwt-secret:
    external: true
  conexao-de-sorte-jwt-issuer:
    external: true
  conexao-de-sorte-server-port:
    external: true

# ============================================================================
# NOTAS IMPORTANTES:
# ============================================================================
#
# 1. Este arquivo N√ÉO cria inst√¢ncias pr√≥prias de MySQL ou Redis
# 2. Conecta aos servi√ßos existentes no servidor via vari√°veis de ambiente
# 3. Para desenvolvimento local, use docker-compose.dev.yml
# 4. As vari√°veis de ambiente devem ser definidas no arquivo .env ou CI/CD
#
# Vari√°veis obrigat√≥rias:
# - DATABASE_R2DBC_URL=r2dbc:mysql://mysql-host:3306/conexao_auth
# - DATABASE_JDBC_URL=jdbc:mysql://mysql-host:3306/conexao_auth
# - DATABASE_USERNAME=usuario_auth
# - DATABASE_PASSWORD=senha_segura
# - REDIS_HOST=redis-host
# - REDIS_PASSWORD=senha_redis
# - JWT_SECRET=chave_jwt_secreta
# - AZURE_CLIENT_ID=client_id_azure
# - AZURE_TENANT_ID=tenant_id_azure
# - AZURE_KEYVAULT_ENDPOINT=https://keyvault.vault.azure.net/
#
# ============================================================================
