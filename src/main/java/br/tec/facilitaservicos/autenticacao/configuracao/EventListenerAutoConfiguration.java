package br.tec.facilitaservicos.autenticacao.configuracao;

import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

/**
 * ============================================================================
 * üõ°Ô∏è AUTO-CONFIGURA√á√ÉO DE EVENT LISTENERS - PROGRAMA√á√ÉO DEFENSIVA
 * ============================================================================
 * 
 * Garante que os ApplicationListeners essenciais sejam registrados mesmo
 * se o mecanismo spring.factories falhar por algum motivo.
 * 
 * Esta √© uma medida de programa√ß√£o defensiva para ambiente de produ√ß√£o,
 * garantindo que componentes cr√≠ticos como R2dbcUrlNormalizer sempre
 * sejam carregados.
 * 
 * @author Sistema de Migra√ß√£o R2DBC
 * @version 1.0
 * @since 2024
 */
@Configuration
public class EventListenerAutoConfiguration {

    /**
     * üõ°Ô∏è Registra R2dbcUrlNormalizer como bean se n√£o existir.
     * 
     * Esta configura√ß√£o defensiva garante que o normalizer sempre
     * seja dispon√≠vel, mesmo se o spring.factories n√£o for processado.
     */
    @Bean
    @ConditionalOnMissingBean(R2dbcUrlNormalizer.class)
    public R2dbcUrlNormalizer r2dbcUrlNormalizer() {
        return new R2dbcUrlNormalizer();
    }
}