spring:
  application:
    name: autenticacao
    
  profiles:
    active: dev
    
  r2dbc:
    url: r2dbc:mysql://localhost:3306/conexao_sorte_auth
    username: ${DB_USERNAME:conexao_sorte}
    password: ${DB_PASSWORD:}  # Removed default password for security
    pool:
      enabled: true
      initial-size: 5
      max-size: 20
      max-idle-time: 30m
      max-acquire-time: 60s
      
  # Flyway para migrations (usa JDBC)
  flyway:
    enabled: true
    url: jdbc:mysql://localhost:3306/conexao_sorte_auth
    user: ${DB_USERNAME:conexao_sorte}
    password: ${DB_PASSWORD:}  # Removed default password for security
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: false
    
  # Cache reativo (Redis)
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          enabled: true
          max-active: 20
          max-idle: 8
          min-idle: 2
          
  # Azure Key Vault with configtree pattern
  cloud:
    azure:
      keyvault:
        secret:
          enabled: true
          endpoint: ${AZURE_KEYVAULT_URI:}
          case-sensitive: false
          secret-keys: conexao-de-sorte-jwt-signing-key,conexao-de-sorte-jwt-verification-key,conexao-de-sorte-jwt-key-id,conexao-de-sorte-jwt-secret
      credentials:
        client-id: ${AZURE_CLIENT_ID:}
        client-secret: ${AZURE_CLIENT_SECRET:}
      profile:
        tenant-id: ${AZURE_TENANT_ID:}
  
  # Configtree secret management
  config:
    import:
      - optional:configtree:/etc/secrets/azure/
      - optional:configtree:/mnt/secrets/
      - optional:file:./secrets.properties

server:
  port: ${SERVER_PORT:8081}
  shutdown: graceful
  
  # SSL/TLS Configuration
  ssl:
    enabled: ${SSL_ENABLED:false}
    key-store: ${SSL_KEYSTORE_PATH:}
    key-store-password: ${SSL_KEYSTORE_PASSWORD:}
    key-store-type: PKCS12
    
  netty:
    connection-timeout: 20s
    h2c-max-content-length: 0B
    
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
      cors:
        allowed-origins: "*"
        allowed-methods: GET
        
  endpoint:
    health:
      show-details: when-authorized
      show-components: when-authorized
      probes:
        enabled: true
        
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
      
  metrics:
    export:
      prometheus:
        enabled: true
        step: 60s
    web:
      server:
        request:
          autotime:
            enabled: true
            percentiles: 0.5,0.95,0.99
            
  tracing:
    enabled: true
    sampling:
      probability: ${TRACING_PROBABILITY:0.1}

# JWT Configuration with secure secret management
jwt:
  # Duracao dos tokens (em segundos)
  access-token-validity: ${JWT_ACCESS_TOKEN_VALIDITY:3600}  # 1 hora
  refresh-token-validity: ${JWT_REFRESH_TOKEN_VALIDITY:604800}  # 7 dias
  
  # Azure Key Vault keys - using secure naming
  key-vault:
    private-key-name: ${JWT_PRIVATE_KEY_NAME:conexao-de-sorte-jwt-signing-key}
    public-key-name: ${JWT_PUBLIC_KEY_NAME:conexao-de-sorte-jwt-verification-key}
    key-id-name: ${JWT_KEY_ID_NAME:conexao-de-sorte-jwt-key-id}
    secret-name: ${JWT_SECRET_NAME:conexao-de-sorte-jwt-secret}
    
  # Issuer e Audience
  issuer: ${JWT_ISSUER:https://auth.conexaodesorte.com}
  audience: ${JWT_AUDIENCE:conexao-de-sorte}
  
  # JWKS cache
  jwks-cache-duration: ${JWT_JWKS_CACHE_DURATION:3600}  # 1 hora
  
  # Security settings
  algorithm: ${JWT_ALGORITHM:RS256}
  rotation:
    enabled: ${JWT_ROTATION_ENABLED:true}
    schedule: ${JWT_ROTATION_SCHEDULE:0 2 * * *}  # Daily at 2 AM

# CORS Configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,https://app.conexaodesorte.com}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true
  max-age: 3600

# Rate Limiting
rate-limit:
  enabled: true
  default-requests-per-minute: 60
  endpoints:
    "/auth/token":
      requests-per-minute: 10
      burst-capacity: 20
    "/auth/refresh":
      requests-per-minute: 30
      burst-capacity: 50
    "/auth/introspect":
      requests-per-minute: 100
      burst-capacity: 200

# Security Headers
security:
  headers:
    content-security-policy: "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self'"
    x-content-type-options: nosniff
    x-frame-options: DENY
    x-xss-protection: "1; mode=block"
    strict-transport-security: "max-age=31536000; includeSubDomains"
    
# Feature Flags
features:
  auth-microservice: ${FEATURE_AUTH_MS:false}
  jwks-rotation: ${FEATURE_JWKS_ROTATION:true}
  audit-logging: ${FEATURE_AUDIT_LOGGING:true}
  metrics-collection: ${FEATURE_METRICS:true}

# Logging Configuration
logging:
  level:
    br.tec.facilitaservicos.autenticacao: ${LOG_LEVEL:INFO}
    org.springframework.security: ${SECURITY_LOG_LEVEL:WARN}
    org.springframework.r2dbc: ${R2DBC_LOG_LEVEL:WARN}
    io.r2dbc.mysql: ${MYSQL_LOG_LEVEL:WARN}
    com.azure: ${AZURE_LOG_LEVEL:WARN}
    
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
    
  file:
    name: ${LOG_FILE:logs/autenticacao.log}

# OpenAPI Documentation
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
  show-actuator: false
  
# Resilience4j Configuration
resilience4j:
  ratelimiter:
    instances:
      auth-service:
        limit-for-period: 10
        limit-refresh-period: 1m
        timeout-duration: 3s
        
  circuitbreaker:
    instances:
      azure-keyvault:
        sliding-window-size: 100
        minimum-number-of-calls: 10
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        permitted-number-of-calls-in-half-open-state: 5

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
      
  r2dbc:
    url: r2dbc:mysql://localhost:3306/conexao_sorte_auth_dev
    
  flyway:
    url: jdbc:mysql://localhost:3306/conexao_sorte_auth_dev
    
logging:
  level:
    br.tec.facilitaservicos.autenticacao: DEBUG
    org.springframework.security: DEBUG
    org.springframework.r2dbc: DEBUG
    
features:
  auth-microservice: true
  audit-logging: true
  metrics-collection: true

---
# Test Profile  
spring:
  config:
    activate:
      on-profile: test
      
  r2dbc:
    url: r2dbc:mysql://localhost:3306/conexao_sorte_auth_test
    
  flyway:
    url: jdbc:mysql://localhost:3306/conexao_sorte_auth_test
    clean-disabled: false
    
  cloud:
    azure:
      keyvault:
        secret:
          enabled: false
          
jwt:
  key-vault:
    enabled: false
    
logging:
  level:
    br.tec.facilitaservicos.autenticacao: DEBUG
    
features:
  auth-microservice: true
  metrics-collection: false

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
      
  r2dbc:
    url: r2dbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:conexao_sorte_auth}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    pool:
      initial-size: 10
      max-size: 50
      
  flyway:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:conexao_sorte_auth}
    user: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    
server:
  port: 8081
  ssl:
    enabled: true
    
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: never
      
logging:
  level:
    br.tec.facilitaservicos.autenticacao: INFO
    root: WARN
    
  file:
    name: /var/log/autenticacao/application.log
    
features:
  auth-microservice: true
  jwks-rotation: true
  audit-logging: true
  metrics-collection: true
  
rate-limit:
  default-requests-per-minute: 30
  endpoints:
    "/auth/token":
      requests-per-minute: 5
    "/auth/refresh":
      requests-per-minute: 15